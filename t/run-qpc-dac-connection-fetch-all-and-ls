#!/usr/bin/env bash
set -o nounset -o errexit -o errtrace -o pipefail

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")

# shellcheck source=../../../scripts/lib/bash-tap
source "${SCRIPT_DIR}"/../../../scripts/lib/bash-tap
TODO= # Define here to prevent unbound variable error from bash-tap.

function test_qpc_dac_connection_fetch() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_connection_fetch"
  echo "# "

  qpc dac connection fetch --summarized >/tmp/qpc_dac_connection_fetch.$$ 2>&1
  yq eval '.[] | select(.name == "mysql.querypie.io")' \
    /tmp/qpc_dac_connection_fetch.$$ \
    >/tmp/qpc_dac_connection_fetch.mysql.$$ 2>&1

  local UUID DB_TYPE CLOUD NAME LEDGER CREATED UPDATED
  UUID=$(yq eval '.uuid' /tmp/qpc_dac_connection_fetch.mysql.$$)
  DB_TYPE=$(yq eval '.databaseType' /tmp/qpc_dac_connection_fetch.mysql.$$)
  CLOUD=$(yq eval '.cloudProviderType' /tmp/qpc_dac_connection_fetch.mysql.$$)
  NAME=$(yq eval '.name' /tmp/qpc_dac_connection_fetch.mysql.$$)
  LEDGER=$(yq eval '.ledger' /tmp/qpc_dac_connection_fetch.mysql.$$)
  CREATED=$(yq eval '.createdAt' /tmp/qpc_dac_connection_fetch.mysql.$$)
  UPDATED=$(yq eval '.updatedAt' /tmp/qpc_dac_connection_fetch.mysql.$$)

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of mysql which uuid is an unspecified value."
  is "${DB_TYPE}" "MYSQL" \
    "It should print output of mysql which databaseType is MYSQL."
  is "${CLOUD}" "null" \
    "It should print output of mysql which cloudProviderType is null."
  is "${NAME}" "mysql.querypie.io" \
    "It should print output of mysql which name is mysql.querypie.io."
  is "${LEDGER}" "true" \
    "It should print output of mysql which ledger is true."
  like "${CREATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$" \
    "It should print output of mysql which createdAt is YYYY-MM-DD hh:mm:ss.sssZ."
  like "${UPDATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$" \
    "It should print output of mysql which updatedAt is YYYY-MM-DD hh:mm:ss.sssZ."
}

function test_qpc_dac_connection_ls() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_connection_ls"
  echo "# "

  qpc dac connection ls >/tmp/qpc_dac_connection_ls.$$ 2>&1
  yq eval '.[] | select(.name == "mysql.querypie.io")' \
    /tmp/qpc_dac_connection_ls.$$ \
    >/tmp/qpc_dac_connection_ls.mysql.$$ 2>&1

  local UUID DB_TYPE CLOUD NAME LEDGER CREATED UPDATED
  UUID=$(yq eval '.uuid' /tmp/qpc_dac_connection_ls.mysql.$$)
  DB_TYPE=$(yq eval '.databaseType' /tmp/qpc_dac_connection_ls.mysql.$$)
  CLOUD=$(yq eval '.cloudProviderType' /tmp/qpc_dac_connection_ls.mysql.$$)
  NAME=$(yq eval '.name' /tmp/qpc_dac_connection_ls.mysql.$$)
  LEDGER=$(yq eval '.ledger' /tmp/qpc_dac_connection_ls.mysql.$$)
  CREATED=$(yq eval '.createdAt' /tmp/qpc_dac_connection_ls.mysql.$$)
  UPDATED=$(yq eval '.updatedAt' /tmp/qpc_dac_connection_ls.mysql.$$)

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of mysql which uuid is an unspecified value."
  is "${DB_TYPE}" "MYSQL" \
    "It should print output of mysql which databaseType is MYSQL."
  is "${CLOUD}" "null" \
    "It should print output of mysql which cloudProviderType is null."
  is "${NAME}" "mysql.querypie.io" \
    "It should print output of mysql which name is mysql.querypie.io."
  is "${LEDGER}" "true" \
    "It should print output of mysql which ledger is true."
  like "${CREATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$" \
    "It should print output of mysql which createdAt is YYYY-MM-DD hh:mm:ss.sssZ."
  like "${UPDATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$" \
    "It should print output of mysql which updatedAt is YYYY-MM-DD hh:mm:ss.sssZ."
}

function compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls() {
  echo "# ##########"
  echo "# compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls"
  echo "# "
  qpc dac connection fetch >/tmp/qpc_dac_connection_fetch.$$ 2>&1
  qpc dac connection ls >/tmp/qpc_dac_connection_ls.$$ 2>&1
  if diff /tmp/qpc_dac_connection_fetch.$$ /tmp/qpc_dac_connection_ls.$$ |
    sed 's/^/# /'; then
    ok 1 "qpc dac connection fetch and qpc dac connection ls are the same."
  else
    ok 0 "qpc dac connection fetch and qpc dac connection ls are different."
  fi
  # Clean up temporary files
  rm -f /tmp/qpc_dac_connection_fetch.$$ /tmp/qpc_dac_connection_ls.$$
}

function main() {
  local num_of_tests=18
  plan tests ${num_of_tests}

  local top_dir basename
  top_dir=$(realpath "${SCRIPT_DIR}"/../)
  ok 1 "Detected top_dir=${top_dir}"

  basename=$(basename "${top_dir}")
  ok 1 "Detected basename=${basename}"

  pushd "${top_dir}" &>/dev/null
  is "$(pwd)" "${top_dir}" "I just changed the current working directory to ${top_dir}."

  export PATH=.:${PATH}
  test_qpc_dac_connection_fetch
  test_qpc_dac_connection_ls
  compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls

  popd &>/dev/null

  done_testing ${num_of_tests}
}

main "$@"
