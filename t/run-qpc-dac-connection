#!/usr/bin/env bash
set -o nounset -o errexit -o errtrace -o pipefail

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")

# shellcheck source=../../../scripts/lib/bash-tap
source "${SCRIPT_DIR}"/../../../scripts/lib/bash-tap
TODO= # Define here to prevent unbound variable error from bash-tap.

function compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls() {
  echo "# ##########"
  echo "# compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls"
  echo "# "
  qpc dac connection fetch >/tmp/qpc_dac_connection_fetch.$$ 2>&1
  qpc dac connection ls >/tmp/qpc_dac_connection_ls.$$ 2>&1
  if diff /tmp/qpc_dac_connection_fetch.$$ /tmp/qpc_dac_connection_ls.$$ |
    sed 's/^/# /'; then
    ok 1 "qpc dac connection fetch and qpc dac connection ls are the same."
  else
    ok 0 "qpc dac connection fetch and qpc dac connection ls are different."
  fi
  # Clean up temporary files
  rm -f /tmp/qpc_dac_connection_fetch.$$ /tmp/qpc_dac_connection_ls.$$
}

function main() {
  local num_of_tests=4
  plan tests ${num_of_tests}

  local top_dir basename
  top_dir=$(realpath "${SCRIPT_DIR}"/../)
  ok 1 "Detected top_dir=${top_dir}"

  basename=$(basename "${top_dir}")
  ok 1 "Detected basename=${basename}"

  pushd "${top_dir}" &>/dev/null
  is "$(pwd)" "${top_dir}" "I just changed the current working directory to ${top_dir}."

  export PATH=.:${PATH}
  compare_qpc_dac_connection_fetch_and_qpc_dac_connection_ls

  popd &>/dev/null

  done_testing ${num_of_tests}
}

main "$@"
