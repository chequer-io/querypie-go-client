#!/usr/bin/env bash
set -o nounset -o errexit -o errtrace -o pipefail

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")

# shellcheck source=../../../scripts/lib/bash-tap
source "${SCRIPT_DIR}"/../../../scripts/lib/bash-tap
TODO= # Define here to prevent unbound variable error from bash-tap.

function test_qpc_dac_fetch_all_privileges() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_fetch_all_privileges"
  echo "# "

  actual_header=$(qpc dac fetch-all privileges | head -1 || true)
  like "${actual_header}" "^UUID * NAME * PRIVILEGE_TYPES * DESCRIPTION * VENDOR * STATUS *$" \
    "It should print a header line of UUID, NAME, PRIVILEGE_TYPES, DESCRIPTION, VENDOR, STATUS."

  actual_output=$(qpc dac fetch-all privileges | grep "Default Read-Only" | sed 's/   */\t/g' || true)
  IFS=$'\t'
  read -r UUID NAME PRIVILEGE_TYPES DESCRIPTION VENDOR STATUS <<<"${actual_output}"

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of Default Read-Only which UUID is an unspecified value."
  is "${NAME}" "Read-Only" \
    "It should print output of Default Read-Only which NAME is Read-Only."
  is "${PRIVILEGE_TYPES}" '["SELECT"]' \
    "It should print output of Default Read-Only which PRIVILEGE_TYPES is [\"SELECT\"]."
  is "${DESCRIPTION}" "Default Read-Only" \
    "It should print output of Default Read-Only which DESCRIPTION is Default Read-Only."
  is "${VENDOR}" "SQL" \
    "It should print output of Default Read-Only which VENDOR is SQL."
  is "${STATUS}" "ACTIVE" \
    "It should print output of Default Read-Only which STATUS is ACTIVE."
}

function test_qpc_dac_ls_privileges() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_ls_privileges"
  echo "# "

  actual_header=$(qpc dac fetch-all privileges | head -1 || true)
  like "${actual_header}" "^UUID * NAME * PRIVILEGE_TYPES * DESCRIPTION * VENDOR * STATUS *$" \
    "It should print a header line of UUID, NAME, PRIVILEGE_TYPES, DESCRIPTION, VENDOR, STATUS."

  actual_output=$(qpc dac fetch-all privileges | grep "Default Read-Only" | sed 's/   */\t/g' || true)
  IFS=$'\t'
  read -r UUID NAME PRIVILEGE_TYPES DESCRIPTION VENDOR STATUS <<<"${actual_output}"

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of Default Read-Only which UUID is an unspecified value."
  is "${NAME}" "Read-Only" \
    "It should print output of Default Read-Only which NAME is Read-Only."
  is "${PRIVILEGE_TYPES}" '["SELECT"]' \
    "It should print output of Default Read-Only which PRIVILEGE_TYPES is [\"SELECT\"]."
  is "${DESCRIPTION}" "Default Read-Only" \
    "It should print output of Default Read-Only which DESCRIPTION is Default Read-Only."
  is "${VENDOR}" "SQL" \
    "It should print output of Default Read-Only which VENDOR is SQL."
  is "${STATUS}" "ACTIVE" \
    "It should print output of Default Read-Only which STATUS is ACTIVE."
}

function compare_qpc_dac_fetch_all_privileges_and_qpc_dac_ls_privileges() {
  echo "# ##########"
  echo "# compare_qpc_dac_fetch_all_privileges_and_qpc_dac_ls_privileges"
  echo "# "
  qpc dac fetch-all privileges >/tmp/qpc_dac_fetch_all_privileges.$$ 2>&1
  qpc dac ls privileges >/tmp/qpc_dac_ls_privileges.$$ 2>&1
  if diff /tmp/qpc_dac_fetch_all_privileges.$$ /tmp/qpc_dac_ls_privileges.$$ |
    sed 's/^/# /'; then
    ok 1 "qpc dac fetch-all privileges and qpc dac ls privileges are the same."
  else
    ok 0 "qpc dac fetch-all privileges and qpc dac ls privileges are different."
  fi
  # Clean up temporary files
  rm -f /tmp/qpc_dac_fetch_all_privileges.$$ /tmp/qpc_dac_ls_privileges.$$
}

function main() {
  local num_of_tests=18
  plan tests ${num_of_tests}

  local top_dir basename
  top_dir=$(realpath "${SCRIPT_DIR}"/../)
  ok 1 "Detected top_dir=${top_dir}"

  basename=$(basename "${top_dir}")
  ok 1 "Detected basename=${basename}"

  pushd "${top_dir}" &>/dev/null
  is "$(pwd)" "${top_dir}" "I just changed the current working directory to ${top_dir}."

  export PATH=.:${PATH}
  test_qpc_dac_fetch_all_privileges
  test_qpc_dac_ls_privileges
  compare_qpc_dac_fetch_all_privileges_and_qpc_dac_ls_privileges

  popd &>/dev/null

  done_testing ${num_of_tests}
}

main "$@"
