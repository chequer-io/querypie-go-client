#!/usr/bin/env bash
set -o nounset -o errexit -o errtrace -o pipefail

SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")

# shellcheck source=../../../scripts/lib/bash-tap
source "${SCRIPT_DIR}"/../../../scripts/lib/bash-tap
TODO= # Define here to prevent unbound variable error from bash-tap.

function test_qpc_dac_fetch_all_connections() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_fetch_all_connections"
  echo "# "

  actual_header=$(qpc dac fetch-all connections | head -1 || true)
  like "${actual_header}" "^UUID * DB_TYPE * CLOUD * NAME * STATUS * CREATED * UPDATED *$" \
    "It should print a header line of UUID, DB_TYPE, CLOUD, NAME, STATUS, CREATED, UPDATED."

  actual_output=$(qpc dac fetch-all connections | grep mysql.querypie.io | sed 's/   */\t/g' || true)
  IFS=$'\t'
  read -r UUID DB_TYPE CLOUD NAME STATUS CREATED UPDATED <<<"${actual_output}"

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of mysql which UUID is an unspecified value."
  is "${DB_TYPE}" "MYSQL" \
    "It should print output of mysql which DB_TYPE is MYSQL."
  is "${CLOUD}" "-" \
    "It should print output of mysql which CLOUD is none or -."
  is "${NAME}" "mysql.querypie.io" \
    "It should print output of mysql which NAME is mysql.querypie.io."
  is "${STATUS}" "ledger" \
    "It should print output of mysql which STATUS is ledger."
  like "${CREATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$" \
    "It should print output of mysql which CREATED is yyyy-mm-dd HH:MM."
  like "${UPDATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$" \
    "It should print output of mysql which UPDATED is yyyy-mm-dd HH:MM."
}

function test_qpc_dac_ls_connections() {
  local actual_header actual_output
  echo "# ##########"
  echo "# test_qpc_dac_ls_connections"
  echo "# "

  actual_header=$(qpc dac ls connections | head -1 || true)
  like "${actual_header}" "^UUID * DB_TYPE * CLOUD * NAME * STATUS * CREATED * UPDATED *$" \
    "It should print a header line of UUID, DB_TYPE, CLOUD, NAME, STATUS, CREATED, UPDATED."

  actual_output=$(qpc dac ls connections | grep mysql.querypie.io | sed 's/   */\t/g' || true)
  IFS=$'\t'
  read -r UUID DB_TYPE CLOUD NAME STATUS CREATED UPDATED <<<"${actual_output}"

  like "${UUID}" "^[0-9a-f\-]{36}$" \
    "It should print output of mysql which UUID is an unspecified value."
  is "${DB_TYPE}" "MYSQL" \
    "It should print output of mysql which DB_TYPE is MYSQL."
  is "${CLOUD}" "-" \
    "It should print output of mysql which CLOUD is none or -."
  is "${NAME}" "mysql.querypie.io" \
    "It should print output of mysql which NAME is mysql.querypie.io."
  is "${STATUS}" "ledger" \
    "It should print output of mysql which STATUS is ledger."
  like "${CREATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$" \
    "It should print output of mysql which CREATED is yyyy-mm-dd HH:MM."
  like "${UPDATED}" "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}$" \
    "It should print output of mysql which UPDATED is yyyy-mm-dd HH:MM."
}

function compare_qpc_dac_fetch_all_connections_and_qpc_dac_ls_connections() {
  echo "# ##########"
  echo "# compare_qpc_dac_fetch_all_connections_and_qpc_dac_ls_connections"
  echo "# "
  qpc dac fetch-all connections >/tmp/qpc_dac_fetch_all_connections.$$ 2>&1
  qpc dac ls connections >/tmp/qpc_dac_ls_connections.$$ 2>&1
  if diff /tmp/qpc_dac_fetch_all_connections.$$ /tmp/qpc_dac_ls_connections.$$ |
    sed 's/^/# /'; then
    ok 1 "qpc dac fetch-all connections and qpc dac ls connections are the same."
  else
    ok 0 "qpc dac fetch-all connections and qpc dac ls connections are different."
  fi
  # Clean up temporary files
  rm -f /tmp/qpc_dac_fetch_all_connections.$$ /tmp/qpc_dac_ls_connections.$$
}

function main() {
  local num_of_tests=20
  plan tests ${num_of_tests}

  local top_dir basename
  top_dir=$(realpath "${SCRIPT_DIR}"/../)
  ok 1 "Detected top_dir=${top_dir}"

  basename=$(basename "${top_dir}")
  ok 1 "Detected basename=${basename}"

  pushd "${top_dir}" &>/dev/null
  is "$(pwd)" "${top_dir}" "I just changed the current working directory to ${top_dir}."

  export PATH=.:${PATH}
  test_qpc_dac_fetch_all_connections
  test_qpc_dac_ls_connections
  compare_qpc_dac_fetch_all_connections_and_qpc_dac_ls_connections

  popd &>/dev/null

  done_testing ${num_of_tests}
}

main "$@"
